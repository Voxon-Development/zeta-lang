package zeta

module "intrinsic" sizeof<T>() -> usize
module "intrinsic" alignof<T>() -> usize

module extern "intrinsic" ptr_cast_to_raw<T>(T value) -> usize
module extern "intrinsic" ptr_add<T>(Ptr<T> p, usize bytes) -> Ptr<T>
module extern "intrinsic" ptr_deref<T>(Ptr<T> p) -> T
module extern "intrinsic" ptr_store<T>(Ptr<T> p, T value)
module extern "intrinsic" ptr_from_addr<T>(usize addr) -> Ptr<T>
module extern "intrinsic" ptr_addr<T>(Ptr<T> p) -> usize

module extern "intrinsic" fn stack_alloc<T, const N: usize>() -> Ptr<T>;

module extern "intrinsic" fn stack_alloc_zeroed<T, const N: usize>() -> Ptr<T>;