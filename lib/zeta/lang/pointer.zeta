package zeta.lang

type Ptr<T>(usize raw);

inline Ptr.new<T>(T value) -> Ptr<T> = Ptr(intrinsics::ptr_cast_to_raw(value))

inline Ptr.fromAddr(usize addr) -> Ptr<T> = intrinsics::ptr_from_addr<T>(addr)

unsafe inline add<T>(Ptr<T> ptr, usize bytes) -> Ptr<T> = intrinsics::ptr_add<T>(ptr, bytes)

inline deref<T>(Ptr<T> ptr) -> T = intrinsics::ptr_deref<T>(ptr)

inline mut stor<T>(Ptr<T> ptr, T value) = intrinsics::ptr_store<T>(ptr, value)

inline addr<T>(Ptr<T> ptr) -> usize = intrinsics::ptr_addr<T>(ptr)